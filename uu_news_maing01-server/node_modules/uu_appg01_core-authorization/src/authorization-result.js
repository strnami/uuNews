"use strict";

/**
 * Result of the authorization process checking whether a user represented by a session is authorized
 * to access resource at selected uri.
 */
class AuthorizationResult {
  /**
   * Creates new instance of authorization result.
   * @param {Object} data Authorization data
   * @param {boolean} data.isAuthorized Flag if user is authorized to access selected use case
   * @param {String} data.uuIdentity Identity for which was authorization performed
   * @param {Array} data.authorizedProfiles List of profiles that are authorized for current session and use case
   * @param {Array} data.identityProfiles List of all profiles for identity represented by current session
   */
  constructor(data = {}) {
    this._isAuthorized = data.isAuthorized;
    this._uuIdentity = data.uuIdentity;
    this._authorizedProfiles = data.authorizedProfiles || [];
    this._identityProfiles = data.identityProfiles || [];
    if (this._isAuthorized == undefined && this._isAuthorized == null) {
      this._isAuthorized = this._authorizedProfiles.length > 0;
    }
  }

  /**
   * Returns information if the current user is authorized to access selected use case.
   * @returns {boolean} true = authorized, false = not authorized for current use case
   */
  isAuthorized() {
    return !!this._isAuthorized;
  }

  /**
   * Returns uuIdentity for which was authorization performed.
   * @returns {String|*} UuIdentity for which was authorization performed
   */
  getUuIdentity() {
    return this._uuIdentity;
  }

  /**
   * Returns a list of all profiles accessible with the current session and use case.
   * @returns {Array} List of profiles that are authorized for current session and current use case
   */
  getAuthorizedProfiles() {
    return this._authorizedProfiles;
  }

  /**
   * Returns a list of all profiles available for authenticated identity.
   * @returns {Array} List of all profiles available for authenticated identity
   */
  getIdentityProfiles() {
    return this._identityProfiles;
  }
}

module.exports = AuthorizationResult;
