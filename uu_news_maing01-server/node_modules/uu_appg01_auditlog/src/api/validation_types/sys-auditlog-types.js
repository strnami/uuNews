/* eslint-disable */
const createDtoInSchemaType = shape({
    "severity": oneOf(["INFO","WARNING","ERROR","CRITICAL"]).isRequired(),
    "eventTypeCode": string().isRequired(),
    "message": string().isRequired(),
    "parameters": shape({}, true, 6144) // 6 kB
});

const listByTimeAndSppDtoInSchemaType = shape({
    "timeFrom": datetime(), // timeFrom has to be before timeTo
    "timeTo": datetime(),
    "spp": string(),
    "pageInfo": shape({
        "pageIndex": integer(0, null).isRequired(),
        "pageSize": integer(1, 500).isRequired()
    })
});

const listMyByTimeDtoInSchemaType = shape({
    "timeFrom": datetime(), // timeFrom has to be before timeTo
    "timeTo": datetime(),
    "pageInfo": shape({
        "pageIndex": integer(0, null).isRequired(),
        "pageSize": integer(1, 500).isRequired()
    })
});

const deleteBeforeTimeDtoInSchemaType = shape({
    "toTime": datetime().isRequired()
});

const sysSetAuditLogConfigDtoInType = shape({
  appLogStoreUri: uri(),
  transferredLogRecordTtl: number(0, null),
  logTransferAfterCount: number(0, null),
  logTransferTimePeriod: number(0, null)
});
/* eslint-enable */
