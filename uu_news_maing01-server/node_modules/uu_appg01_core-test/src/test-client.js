"use strict";

const Got = require("got");
const FormData = require("form-data");

class TestClient {
  static async get(url, headers = {}) {
    let result = await Got.get(url, { headers: headers, retries: 0, rejectUnauthorized: false, followRedirect: false });
    let data = TestClient._processResponseBody(result.body, result.headers);
    return { status: result.statusCode, headers: result.headers, data: data };
  }

  static async head(url, headers = {}) {
    let result = await Got.head(url, {
      headers: headers,
      retries: 0,
      rejectUnauthorized: false,
      followRedirect: false
    });
    return { status: result.statusCode, headers: result.headers, data: null };
  }

  static async post(url, parameters = null, headers = {}) {
    let body = TestClient._processRequestParams(parameters, headers);
    let result = await Got.post(url, {
      body: body,
      headers: headers,
      retries: 0,
      rejectUnauthorized: false,
      followRedirect: false
    });
    let data = TestClient._processResponseBody(result.body, result.headers);
    return { status: result.statusCode, headers: result.headers, data: data };
  }

  static _processRequestParams(parameters, headers) {
    let contentType = headers["content-type"];
    if (!parameters || typeof parameters === "string") {
      return parameters;
    } else if (!contentType || /application\/json/.test(contentType)) {
      headers["content-type"] = "application/json";
      return JSON.stringify(parameters);
    } else {
      return parameters;
    }
  }

  static _processResponseBody(body, headers) {
    if (/application\/json/.test(headers["content-type"])) {
      return JSON.parse(body);
    } else {
      return body;
    }
  }

  static multipartBuilder() {
    return new FormData();
  }
}

module.exports = TestClient;
