const { DaoFactory } = require("uu_appg01_objectstore");
const { DbConnection } = require("uu_appg01_datastore");
const { LoggerFactory } = require("uu_appg01_core-logging");

const SYS_APP_WORKSPACE_COLLECTION = "sysAppWorkspace";

class Migration_2_0_AsidAwidOwner {
  constructor() {
    this.logger = LoggerFactory.get("UuApp.AppWorkspace.MigrationAsidAwidOwner");
    this.sysAppWorkspaceDao = DaoFactory.getDao(SYS_APP_WORKSPACE_COLLECTION);
  }

  async onStartup() {
    if (DaoFactory.isDataStoreOn()) {
      this.logger.debug("Migration started.");
      try {
        await this._migrate();
        this.logger.debug("Migration finished without errors.");
      } catch (e) {
        this.logger.error("Migration finished with error: ", e);
      }
    }
  }

  async _migrate() {
    let db = await DbConnection.get(this.sysAppWorkspaceDao.customUri);
    let res = await db
      .collection(SYS_APP_WORKSPACE_COLLECTION)
      .updateMany({ sysOwner: { $exists: true } }, { $rename: { sysOwner: "awidOwner" } });
    this.logger.debug("Result of renaming sysOwner attribute name: " + res);

    res = await db
      .collection(SYS_APP_WORKSPACE_COLLECTION)
      .updateMany({ profileList: "SysOwner" }, { $set: { "profileList.$": "AwidOwner" } });
    this.logger.debug("Result of renaming SysOwner profile: " + res);
  }
}

module.exports = Migration_2_0_AsidAwidOwner;
