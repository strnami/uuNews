const WorkspaceError = require("./workspace-error.js");

const UC_CODE = `${WorkspaceError.ERROR_PREFIX}authorization/`;

class AuthorizationFailed extends WorkspaceError {
  constructor(dtoOut, paramMap = {}, status = 500) {
    super(dtoOut, paramMap);
    this.status = status;
    this.message = "Authorization failed.";
    this.code = `${UC_CODE}authorizationFailed`;
  }
}

class UserIsNotAuthorizedError extends WorkspaceError {
  constructor() {
    super(...arguments);
    this.message = "Logged user is not authorized to run use case.";
    this.code = `${UC_CODE}userIsNotAuthorized`;
    this.status = 403;
  }
}

class MissingConfigurationFile extends WorkspaceError {
  constructor() {
    super(...arguments);
    this.message = "profiles.json not found";
    this.code = `${UC_CODE}MissingConfigurationFile`;
    this.status = 500;
  }
}

class SysPermissionDaoGetProfileByUuIdentityFailedError extends WorkspaceError {
  constructor() {
    super(...arguments);
    this.message = "get sysProfiles by sysPermission Dao getProfileByUuIdentity failed.";
    this.code = `${UC_CODE}sysPermissionDaoGetProfileByUuIdentityFailed`;
    this.status = 403;
  }
}

class SysProfileDaoGetByCodesFailedError extends WorkspaceError {
  constructor() {
    super(...arguments);
    this.message = "get sysProfiles by sysProfile Dao getByCodes failed.";
    this.code = `${UC_CODE}sysProfileDaoGetByCodesFailed`;
    this.status = 403;
  }
}

class SysAppWorkspaceDaoGetByAwidFailedError extends WorkspaceError {
  constructor() {
    super(...arguments);
    this.message = "get sysAppWorkspace by sysAppWorkspace Dao getByAwid failed.";
    this.code = `${UC_CODE}sysAppWorkspaceDaoGetByAwidFailed`;
    this.status = 403;
  }
}

module.exports = {
  UserIsNotAuthorizedError,
  SysPermissionDaoGetProfileByUuIdentityFailedError,
  SysProfileDaoGetByCodesFailedError,
  SysAppWorkspaceDaoGetByAwidFailedError,
  MissingConfigurationFile,
  AuthorizationFailed
};
