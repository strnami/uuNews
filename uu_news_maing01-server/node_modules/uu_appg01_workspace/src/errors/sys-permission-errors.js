const WorkspaceError = require("./workspace-error.js");

const SysCreatePermission = {
  UC_CODE: `${WorkspaceError.ERROR_PREFIX}sysCreatePermission/`,

  InvalidDtoInError: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "DtoIn is not valid.";
      this.code = `${SysCreatePermission.UC_CODE}invalidDtoIn`;
    }
  },

  SysAppWorkspaceDoesNotExistError: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Object sysAppWorkspace does not exist.";
      this.code = `${SysCreatePermission.UC_CODE}sysAppWorkspaceDoesNotExist`;
    }
  },

  SysProfileNotExistError: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Selected sysProfileCode does not exist.";
      this.code = `${SysCreatePermission.UC_CODE}sysProfileDoesNotExist`;
    }
  },

  SysPermissionDaoCreateFailedError: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Create sysPermission by sysPermission DAO create failed.";
      this.code = `${SysCreatePermission.UC_CODE}sysPermissionDaoCreateFailed`;
    }
  },

  SysPermissionDaoGetCountFailedError: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "get sysPermission Count by sysPermission Dao getCount failed.";
      this.code = `${SysCreatePermission.UC_CODE}sysPermissionDaoGetCountFailed`;
    }
  },

  SysPermissionDaoListByUuIdentityAndProfileFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "get sysPermission List by sysPermission Dao listByUuIdentityAndProfile failed.";
      this.code = `${SysCreatePermission.UC_CODE}sysPermissionDaoListByUuIdentityAndProfileFailed`;
    }
  },

  MaxNumberOfInstancesWillBeExceeded: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message =
        "Permissions cannot be created. Maximal count of sysPermission instances would have been exceeded.";
      this.code = `${SysCreatePermission.UC_CODE}maxNumberOfInstancesWillBeExceeded`;
    }
  },

  MaxNumberOfInstancesReached: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Permissions cannot be created. Maximal count of sysPermission instances was reached.";
      this.code = `${SysCreatePermission.UC_CODE}maxNumberOfInstancesReached`;
    }
  }
};

const SysDeletePermission = {
  UC_CODE: `${WorkspaceError.ERROR_PREFIX}sysDeletePermission/`,

  InvalidDtoInError: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "DtoIn is not valid.";
      this.code = `${SysDeletePermission.UC_CODE}invalidDtoIn`;
    }
  },

  SysPermissionDaoDeleteFailedError: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Identity uu id list is not valid.";
      this.code = `${SysDeletePermission.UC_CODE}sysPermissionDaoDeleteFailed`;
    }
  }
};

const SysListPermission = {
  UC_CODE: `${WorkspaceError.ERROR_PREFIX}sysListPermissions/`,

  InvalidDtoInError: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "DtoIn is not valid.";
      this.code = `${SysListPermission.UC_CODE}invalidDtoIn`;
    }
  }
};

module.exports = {
  SysCreatePermission,
  SysDeletePermission,
  SysListPermission
};
